AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  BucketName:
    Type: String
    Description: "Please provide the unique S3 bucket name"

  TopicName:
    Type: String
    Description: "Please provide a topic name"

  EmailEndpoint:
    Type: String
    Description: "Please provide an email address to subscribe to the SNS topic"

  QueueName:
    Type: String
    Description: "Please provide Queue name" 

  TableName:
    Type: String
    Description: "Please provide DynamoDB Table name"

  StreamViewType:
    Type: String
    Description: "Please provide DynamoDB Stream View Type (e.g. , NEW_IMAGE, OLD_IMAGE, NEW_AND_OLD_IMAGE, KEYS_ONLY)"

  DestinationSNSTopicName:
    Type: String
    Description: "Please provide name of destination sns Topic"

  DestinationSNSTopicEmailEndpoint:
    Type: String
    Description: "Please provide an email address to subscribe to the destination SNS topic"
  

Resources:

  # Step 1: Create S3 Bucket with Event Notification
  MyS3Bucket:
    Type: "AWS::S3::Bucket"
    Properties: 
      BucketName: !Ref BucketName
      NotificationConfiguration:
        TopicConfigurations:
          - Event: "s3:ObjectCreated:*"
            Topic: !Ref MySNSTopic

  # Step 2: Create SNS Topic
  MySNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "My-Sample-SNS-Topic-for receive the message"
      TopicName: !Ref TopicName

  # Create Destination sns Topic
  DestinationSNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      DisplayName: "My Destionation SNS Topic Name"
      TopicName: !Ref DestinationSNSTopicName
  # Step 3: Create SNS Topic Policy to allow S3 to publish to SNS
  MySNSTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      Topics: 
        - !Ref MySNSTopic
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "s3.amazonaws.com"
            Action: "sns:Publish"
            Resource: !Ref MySNSTopic
            Condition:
              ArnLike:
                aws:SourceArn: !GetAtt MyS3Bucket.Arn
  # Step 4: Create SNS Subscription - Email
  MyEmailSubscription:
    Type: "AWS::SNS::Subscription"
    Properties: 
      Protocol: "email"
      Endpoint: !Ref EmailEndpoint      # Reference the email parameter
      TopicArn: !Ref MySNSTopic
  
  # Step 4: Create SNS Subscription - Email
  DestionationSNSTopicEmailSubscription:
    Type: "AWS::SNS::Subscription"
    Properties: 
      Protocol: "email"
      Endpoint: !Ref DestinationSNSTopicEmailEndpoint     # Reference the email parameter
      TopicArn: !Ref DestinationSNSTopic
  # Step 5: Create SQS Queue
  MySQSQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Ref QueueName

  # Step 6: Create SNS Subscription to SQS Queue
  MySQSSubscription:
    Type: "AWS::SNS::Subscription"
    Properties:
      Protocol: "sqs"
      Endpoint: !GetAtt MySQSQueue.Arn  # Subscription endpoint is the SQS queue ARN
      TopicArn: !Ref MySNSTopic

  # Step 8: Add SNS Permissions to SQS Queue Policy
  MySQSQueuePolicy:
    Type: "AWS::SQS::QueuePolicy"
    Properties:
      Queues: 
        - !Ref MySQSQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "sns.amazonaws.com"
            Action: "sqs:SendMessage"
            Resource: !GetAtt MySQSQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref MySNSTopic  # Only allow this SNS Topic to send messages to SQS

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TableName
      AttributeDefinitions:
        - AttributeName: Id
          AttributeType: S
        - AttributeName: Application
          AttributeType: S
      KeySchema:
        - AttributeName: Id
          KeyType: HASH  # Partition Key
        - AttributeName: Application
          KeyType: RANGE  # Sort Key
      BillingMode: PAY_PER_REQUEST  # On-Demand Billing
      StreamSpecification:
        StreamViewType: !Ref StreamViewType
      SSESpecification:
        SSEEnabled: true
  

Outputs:
  S3BucketName:
    Description: "Name of the S3 bucket"
    Value: !Ref MyS3Bucket

  S3BucketARN:
    Description: "ARN of the S3 bucket"
    Value: !GetAtt MyS3Bucket.Arn 

  SNSTopicName:
    Description: "Topic name of the SNS topic"
    Value: !Ref MySNSTopic

  DynamoDBTableName:
    Description: Name of the DynamoDB Table
    Value: !Ref DynamoDBTable
  DynamoDBStreamArn:
    Description: ARN of the DynamoDB Stream
    Value: !GetAtt DynamoDBTable.StreamArn

  DestiSNSTopic: 
    Description: Name of the Destination SNS Topic
    Value: !GetAtt DestinationSNSTopic.TopicArn

  DestiSNSEmailEndPoint: 
    Description: Addres of the Destination SNS Topic Email 
    Value: !Ref DestinationSNSTopicEmailEndpoint

  
  
